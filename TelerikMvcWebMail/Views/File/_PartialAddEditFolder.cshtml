@model TelerikMvcWebMail.Models.FoldersViewmodel

@{
  Layout = null;
}

<div class="col-md-10">
    @using (Ajax.BeginForm("AddEditFolder", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSucessFunctionFormAddEditFolder" }, new { @id = "FormAddEditFolder" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
           
            @Html.HiddenFor(model => model.Id, new { @value = Model.Id })
            <div class="form-group">
                <div class="col-md-6">
                    @Html.Label("Mail Box")
                </div>
                    <div class="col-md-6">
            
                        @(Html.Kendo().DropDownListFor(m => m.MailBoxId)
                          .DataTextField("Text")
                          .DataValueField("Value")
                        .BindTo(ViewBag.FolderList)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                        @Html.ValidationMessageFor(model => model.MailBoxId, "", new { @class = "text-danger" })
                    </div>

            </div>  
            <div class="form-group">
                <div class="col-md-12">
                    @Html.Label("Folder Name")
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>               
            </div>   
            <div class="form-group">
                <div class="col-md-6">
                    @Html.Label("Type")
                </div>
                <div class="col-md-6 ">                   
                    @(Html.Kendo().DropDownList()
                  .Name("TypeId")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(new List<SelectListItem>() {
                      new SelectListItem() {
                          Text = "Select Type",
                          Value = ""
                      },
                      new SelectListItem() {
                          Text = "Default",
                          Value = "0"
                      },
                      new SelectListItem() {
                          Text = "Standard",
                          Value = "1"
                      },
                  })
                     .HtmlAttributes(new { style = "width: 100%" })
                    )
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
              </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>

<script>



    function OnSucessFunctionFormAddEditFolder(e)
    {
        $("#AddEditFolderDetailes").data("kendoWindow").close();
        if(e==true)
        {
            //alert("Folder Detailes Save SUceesfully");
        }
        else {
            alert("Error ");
        }
        $("#gridFolders").data("kendoGrid").dataSource.read();
    }

    $(function () {
        $("form").kendoValidator({
            rules: {
                greaterdate: function (input) {
                    if (input.is("[data-val-greaterdate]") && input.val() != "") {
                        var date = kendo.parseDate(input.val()),
                            earlierDate = kendo.parseDate($("[name='" + input.attr("data-val-greaterdate-earlierdate") + "']").val());
                        return !date || !earlierDate || earlierDate.getTime() < date.getTime();
                    }

                    return true;
                }
            },
            messages: {
                greaterdate: function (input) {
                    return input.attr("data-val-greaterdate");
                }
            }
        });
    });
</script>


